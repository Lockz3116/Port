* {
    margin: 0;
    padding: 0;
}

html,
body {
    overflow: hidden;
}

.webgl {
    position: fixed;
    top: 0;
    left: 0;
    outline: none;
}

.jitter {
    animation-duration: 0.3s;
    animation-timing-function: ease-in-out;
    animation-fill-mode: forwards;
    animation-iteration-count: infinite;
    animation-name: jittery;
    z-index: -10;
}

.interface-wrapper {
    width: 100%;
    top: 64px;
    left: 64px;
}

.icon-control-container {
    height: 26.5px;
    width: 26.5px;
}

@media only screen and (max-width: 768px) {
    .interface-wrapper {
        width: 100%;
        top: 24px;
        left: 24px;
    }

    .icon-control-container {
        height: 19.5px;
        width: 19.5px;
    }
}

@keyframes jittery {
    10% {
        transform: translate(-0.1px, -0.15px) scale(1, 1);
    }

    20% {
        transform: translate(0.15px, 0.1px) scale(1, 1);
    }

    30% {
        transform: translate(-0.2px, -0.25px) scale(1, 1);
    }

    40% {
        transform: translate(0.05px, 0.1px) scale(1, 1);
    }

    50% {
        transform: translate(-0.025px, -0.05px) scale(1, 1);
    }

    60% {
        transform: translate(0px, 0.075px) scale(1, 1);
    }

    70% {
        transform: translate(-0.075px, -0.1px) scale(1, 1);
    }

    80% {
        transform: translate(0.075px, 0.125px) scale(1, 1);
    }

    90% {
        transform: translate(-0.125px, -0.075px) scale(1, 1);
    }

    100% {
        transform: translate(0.075px, 0.025px) scale(1, 1);
    }
}

{
    "compilerOptions": {
        "target": "ES6",
        "moduleResolution": "node",
        "strict": true,
        "paths": {
            "three/examples/jsm/libs/dat.gui.module": ["../node_modules/@types/dat.gui"]
        },
        "strictPropertyInitialization": false,
        "allowSyntheticDefaultImports": true,
        "jsx": "react",
    },
    
    "include": ["Application/*", "./*"],
}

type Resource =
    | TextureResource
    | CubeTextureResource
    | ModelResource
    | AudioResource;

declare interface StyleSheetCSS {
    [key: string]: React.CSSProperties;
}

type TextureResource = {
    name: string;
    type: 'texture';
    path: string;
};

type CubeTextureResource = {
    name: string;
    type: 'cubeTexture';
    path: string[];
};

type ModelResource = {
    name: string;
    type: 'gltfModel';
    path: string;
};

type AudioResource = {
    name: string;
    type: 'audio';
    path: string;
};

type EnclosingPlane = {
    size: THREE.Vector2;
    position: THREE.Vector3;
    rotation: THREE.Euler;
};

type CameraKeyframe = {
    position: THREE.Vector3;
    focalPoint: THREE.Vector3;
};

type LoadedResource =
    | LoadedTexture
    | LoadedCubeTexture
    | LoadedModel
    | LoadedAudio;

type LoadedTexture = THREE.Texture;

type LoadedModel = import('three/examples/jsm/loaders/GLTFLoader').GLTF;

type LoadedCubeTexture = THREE.CubeTexture;

type LoadedAudio = AudioBuffer;

type ResourceType = 'texture' | 'cubeTexture' | 'gltfModel';

<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <style>
    body {
      background-color: rgb(0, 0, 0);
      margin: 0;
    }

    #webgl {
      pointer-events: none;
    }

    #ui-app {
      width: 100%;
      height: 100%;
      position: relative;
      display: flex;
      justify-content: center;
      align-items: center;
      box-sizing: border-box;
    }

    #ui {
      position: absolute;
      overflow: hidden;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      display: flex;
      justify-content: center;
      align-items: center;
      box-sizing: border-box;
    }

    #monitor-videos {
      pointer-events: none;
      position: 'absolute';
      opacity: 0;
      width: 0;
      height: 0;
      top: 0;
      left: 0;

    }

    #css {
      cursor: pointer;
    }

    #ui-interactive {
      position: absolute;
      top: 0;
      left: 0;
      width: 256px;
    }

    video {
      position: absolute;
      top: 0;
      pointer-events: none;
    }
  </style>

  <!-- Primary Meta Tags -->
  <title>Henry Heffernan - Portfolio 2022</title>
  <meta name="title" content="Henry Heffernan - Software Engineer">
  <meta name="description"
    content="I'm Henry, a Software Engineer based in NY. Rensselaer Polytechnic Institute Graduate with my B.S. in Computer Science, currently looking for a full time role.">

  <!-- Open Graph / Facebook -->
  <meta property="og:type" content="website">
  <meta property="og:url" content="https://henryheffernan.com/">
  <meta property="og:title" content="Henry Heffernan - Software Engineer">
  <meta property="og:description"
    content="I'm Henry, a Software Engineer based in NY. Rensselaer Polytechnic Institute Graduate with my B.S. in Computer Science, currently looking for a full time role.">

  <!-- Twitter -->


  <meta property="twitter:card" content="summary_large_image">
  <meta name="twitter:card" content="summary_large_image">

  <meta property="twitter:url" content="https://henryheffernan.com/">
  <meta name="twitter:url" content="https://henryheffernan.com/">

  <meta property="twitter:title" content="Henry Heffernan - Software Engineer">
  <meta name="twitter:title" content="Henry Heffernan - Software Engineer">

  <meta property="twitter:description"
    content="I'm Henry, a Software Engineer based in NY. Rensselaer Polytechnic Institute Graduate with my B.S. in Computer Science, currently looking for a full time role.">
  <meta name="twitter:description"
    content="I'm Henry, a Software Engineer based in NY. Rensselaer Polytechnic Institute Graduate with my B.S. in Computer Science, currently looking for a full time role.">

  <meta property="twitter:image" content="https://henryheffernan.com/images/preview-new.jpg">
  <meta name="twitter:image" content="https://henryheffernan.com/images/preview-new.jpg">

  <!-- Images -->
  <meta property="og:image" content="https://henryheffernan.com/images/preview-new.jpg">
  <meta property="og:image:secure" content="https://henryheffernan.com/images/preview-new.jpg">

  <link rel="shortcut icon" href="../static/images/favicon.ico" type="image/x-icon">

  <!-- Global site tag (gtag.js) - Google Analytics -->
  <script async src="https://www.googletagmanager.com/gtag/js?id=G-4FJBF6WF60"></script>
  <script>
    window.dataLayer = window.dataLayer || [];
    function gtag() { dataLayer.push(arguments); }
    gtag('js', new Date());

    gtag('config', 'G-4FJBF6WF60');
  </script>
</head>

<body>
  <div id="css"></div>
  <div id="webgl"></div>
  <div id="overlay"></div>
  <div id="ui-interactive"></div>
  <div id="ui"></div>
  <div id="monitor-videos">
    <video id="video-1" muted loop autoplay width="0" height="0" src="../static/textures/monitor/video/base-static.mp4"
      style="opacity: 0;"></video>
    <video id="video-2" muted loop autoplay width="0" height="0"
      src="../static/textures/monitor/video/static-texture-layer.mp4" style="opacity: 0;"></video>
  </div>
</body>

</html>
import './style.css';

import Application from './Application/Application';

const app: Application = new Application();
